#!/bin/sh -ex

out=$(mktemp -d)
ps=$(kubectl get nodes -o=jsonpath="{range .items[*]}{.metadata.name}{'\n'}{end}" | grep parsec-server)

echo "output measurements are in $out"

threads=("1" "2" "4" "8")
benchmarks=("blackscholes" "canneal" "dedup" "ferret" "freqmine" "radix" "vips")

for thread in "${threads[@]}"; do
  for bench in "${benchmarks[@]}"; do
    echo "Running $bench with $thread threads"
    rm -f part2b/edited/parsec-$bench.yaml
    sed "s/-n 1/-n $thread/" parsec-benchmarks/part2b/parsec-$bench.yaml > part2b/edited/parsec-$bench.yaml

    kubectl label nodes $ps cca-project-nodetype=parsec
    kubectl create -f part2b/edited/parsec-$bench.yaml
    state="whatever"
    while [ $state != "Succeeded" ]; do
      sleep 2
      state=$(kubectl get pods -o=jsonpath="{range .items[*]}{.metadata.name}: {.status.phase}{'\n'}{end}" | grep $bench | cut -d' ' -f2)
      echo "Still waiting for parsec-$bench-$thread pod to start..."
    done

    pod=$(kubectl get pods --selector=job-name=parsec-$bench --output=jsonpath='{.items[*].metadata.name}')
    kubectl logs $pod > $out/$bench-$thread.raw;
    kubectl delete job parsec-$bench
    kubectl delete pod $pod || true
    while [ ! -z $state ]; do
      sleep 2
      state=$(kubectl get pods -o=jsonpath="{range .items[*]}{.metadata.name}: {.status.phase}{'\n'}{end}" | grep $bench | cut -d' ' -f2)
      echo "Still waiting for parsec-$bench-$thread pod to terminate..."
    done
  done
done

echo "output measurements are in $out"
